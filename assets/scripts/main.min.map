{"version":3,"sources":["skip.js","service.js","main.js"],"names":["simulateClick","element","eventOptions","window","MouseEvent","bubbles","cancelable","view","dispatchEvent","initialize","console","log","activateStickyScrollPadding","getContactEmail","getNetworkStatus","document","navItem","querySelector","navItemHeight","offsetHeight","documentElement","style","setProperty","concat","contactItems","querySelectorAll","Array","from","forEach","contact","getContactEvent","event","id","target","emailData","setAttribute","removeAttribute","addEventListener","key","status","online","offline","updateNetworkStatus","navigator","onLine","setTimeout","serviceWorker","register","then","classList","contains","history","pushState","title","location","pathname"],"mappings":"aAiBA,SAAAA,cAAAC,GAEA,IAAAC,EAAA,IAAAC,OAAAC,WAAA,QAAA,CACAC,QAAA,CAAA,EACAC,WAAA,CAAA,EACAC,KAAAJ,MACA,CAAA,EAEAF,EAAAO,cAAAN,CAAA,CASA,CCjCA,SAAAO,aCGAC,QAAAC,IAAA,aAAA,EACAC,4BAAA,EACAC,gBAAA,EACAC,iBAAA,CACA,CFPAC,SAAAA,8BEWA,IAAAC,EAAAD,SAAAE,cAAA,SAAA,EAEAD,IACAE,EAAAF,EAAAG,aAEAJ,SAAAK,gBAAAC,MAAAC,YACA,mBAAA,GAAAC,OACAL,EAAA,IAAA,CACA,EAEA,CFLA,SAAAL,kBESA,IAAAW,EAAAT,SAAAU,iBAAA,cAAA,EACAC,MAAAC,KAAAH,CAAA,EAEAI,QAAA,SAAAC,GAWA,SAAAC,EAAAC,GFNAF,EAAAG,IAAAD,EAAAE,OAAAD,IEjCA7B,GADA+B,EAAA,yBACA/B,QAAAA,KAAAA,GAAAA,EAAAA,QAAAA,MAAAA,GAAAA,EAEA0B,EAAAM,aAAA,aAAA,MAAA,EA0CAN,EAAAM,aAAA,OAAA,UAAAZ,OAAAW,CAAA,CAAA,IAEAL,EAAAM,aAAA,aAAA,OAAA,EACAN,EAAAO,gBAAA,YAAA,EAxCAP,EAAAO,gBAAA,MAAA,EA0CAP,EAAAO,gBAAA,KAAA,EAxCAP,EAAAO,gBAAA,QAAA,EA2CA,CAvBArB,SAAAsB,iBAAA,QAAA,SAAAN,GACAD,EAAAC,CAAA,CACA,CAAA,EAEAhB,SAAAsB,iBAAA,UAAA,SAAAN,GACA,UAAAA,EAAAO,KACAR,EAAAC,CAAA,CAEA,CAAA,CAgBA,CAAA,CACA,CAjCA,SAAAjB,mBAqCA,IAAAyB,EAAAxB,SAAAE,cAAA,SAAA,EAnCAuB,EAAAzB,SAAAE,cAAA,SAAA,EACAwB,EAAA1B,SAAAE,cAAA,UAAA,EAsCA,SAAAyB,KAGA,YAFAC,UAAAC,OAAA,SAAA,YAGAL,EAAAJ,aAAA,YAAA,MAAA,EACAM,EAAAN,aAAA,YAAA,MAAA,EACAK,IAEAD,EAAAJ,aAAA,YAAA,MAAA,EACAK,EAAAL,aAAA,YAAA,MAAA,EACAM,IAJAN,aAAA,YAAA,OAAA,EAOAU,WAAA,WACAL,EAAAL,aAAA,YAAA,OAAA,EACAI,EAAAJ,aAAA,YAAA,OAAA,CACA,EAAA,GAAA,CACA,CAEAhC,OAAAkC,iBAAA,SAAAK,CAAA,EACAvC,OAAAkC,iBAAA,UAAAK,CAAA,CACA,CDnFA,kBAAAC,WACAA,UAAAG,cAEAC,SAAA,oBAAA,EACAC,KAAA,WACAtC,QAAAC,IAAA,8BAAA,CACA,CAAA,EDNAI,SAAAsB,iBAAA,UAAA,SAAAN,GACA,IAAA9B,EAAA8B,EAAAE,OAEA,UAAAF,EAAAO,KACArC,EAAAgD,UAAAC,SAAA,MAAA,IACAlD,cAAAC,CAAA,EAEAkD,QAAAC,UACAD,QAAAC,UAAA,GAAArC,SAAAsC,MAAAlD,OAAAmD,SAAAC,QAAA,EAEAD,SAAA,IAIA,CAAA,EEdAnD,OAAAkC,iBAAA,mBAAA5B,UAAA","file":"main.min.js","sourcesContent":["// Simulate Click\r\ndocument.addEventListener(\"keydown\", (event) => {\r\n  const element = event.target;\r\n  //   console.log(element)\r\n  if (event.key === \"Enter\") {\r\n    if (element.classList.contains(\"skip\")) {\r\n      simulateClick(element);\r\n\r\n      if (history.pushState) {\r\n        history.pushState(\"\", document.title, window.location.pathname);\r\n      } else {\r\n        location = \"/\";\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nfunction simulateClick(element) {\r\n  // Create our event (with options)\r\n  const eventOptions = new window.MouseEvent(\"click\", {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    view: window,\r\n  });\r\n  // If cancelled, don't dispatch our event\r\n  const cancelled = !element.dispatchEvent(eventOptions);\r\n\r\n  if (cancelled) {\r\n    // A handler called preventDefault.\r\n    // console.log('cancelled')\r\n  } else {\r\n    // None of the handlers called preventDefault.\r\n    // console.log('not cancelled')\r\n  }\r\n}","// Check the browser to make sure it supports service workers\r\nif('serviceWorker' in navigator) {\r\n    navigator.serviceWorker\r\n    // Register the path to the service worker file\r\n    .register('./serviceWorker.js')\r\n    .then(function() {\r\n        console.log('Service Worker is Registered');\r\n    })\r\n}","// Initialize\r\nwindow.addEventListener(\"DOMContentLoaded\", initialize);\r\n\r\nfunction initialize() {\r\n  console.log(\"Welcome! ðŸ‘‹\");\r\n  activateStickyScrollPadding();\r\n  getContactEmail();\r\n  getNetworkStatus();\r\n}\r\n\r\n// Scrolling\r\nfunction activateStickyScrollPadding() {\r\n  const navItem = document.querySelector(\".navbar\");\r\n\r\n  if (navItem) {\r\n    const navItemHeight = navItem.offsetHeight;\r\n\r\n    document.documentElement.style.setProperty(\r\n      \"--scroll-padding\",\r\n      `${navItemHeight}px`\r\n    );\r\n  }\r\n}\r\n\r\n// Email\r\nfunction getContactEmail() {\r\n  let contactItems = document.querySelectorAll(\"[data-email]\");\r\n  let contactArray = Array.from(contactItems);\r\n\r\n  contactArray.forEach((contact) => {\r\n    document.addEventListener(\"click\", (event) => {\r\n      getContactEvent(event);\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        getContactEvent(event);\r\n      }\r\n    });\r\n\r\n    function getContactEvent(event) {\r\n      if (contact.id == event.target.id) {\r\n        let emailData = \"helloATfebreroDOTinfo\";\r\n        emailData = emailData.replace(/AT/, \"@\").replace(/DOT/, \".\");\r\n        contact.setAttribute(\"data-email\", \"true\");\r\n        contact.setAttribute(\"href\", `mailto:${emailData}`);\r\n      } else {\r\n        contact.setAttribute(\"data-email\", \"false\");\r\n        contact.removeAttribute(\"data-value\");\r\n        contact.removeAttribute(\"href\");\r\n        contact.removeAttribute(\"rel\");\r\n        contact.removeAttribute(\"target\");\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// Network\r\nfunction getNetworkStatus() {\r\n  let status = document.querySelector(\"#status\");\r\n  let online = document.querySelector(\"#online\");\r\n  let offline = document.querySelector(\"#offline\");\r\n\r\n  function updateNetworkStatus() {\r\n    let condition = navigator.onLine ? \"online\" : \"offline\";\r\n\r\n    if (condition === \"offline\") {\r\n      status.setAttribute(\"data-open\", \"true\");\r\n      offline.setAttribute(\"data-open\", \"true\");\r\n      online.setAttribute(\"data-open\", \"false\");\r\n    } else {\r\n      status.setAttribute(\"data-open\", \"true\");\r\n      online.setAttribute(\"data-open\", \"true\");\r\n      offline.setAttribute(\"data-open\", \"false\");\r\n    }\r\n\r\n    setTimeout(() => {\r\n      online.setAttribute(\"data-open\", \"false\");\r\n      status.setAttribute(\"data-open\", \"false\");\r\n    }, 6000);\r\n  }\r\n\r\n  window.addEventListener(\"online\", updateNetworkStatus);\r\n  window.addEventListener(\"offline\", updateNetworkStatus);\r\n}\r\n"]}